name: Build OpenWrt X64

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - 'start'
  schedule:
    - cron: 0 12 * * *
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config/x64.config
  DIY_SH: diy.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set Date
      run: |
         date=$(date +%Y-%m-%d)
         echo "::set-env name=DATE::$date"

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 下载主题和软件包
      run: |     
        cd openwrt/package/lean
        git clone https://github.com/openwrt-develop/luci-theme-atmaterial
        git clone https://github.com/rosywrt/luci-theme-rosy

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        cd bin
        tar czvf x64_packages.tar.gz packages
        tar czvf x64_targets.tar.gz  targets
        https://sc.ftqq.com/SCU86461T785633bfcdf09fb254b86455c5f771d65e566d3205ba6.send?text=时光机即将编译完成
        
    - name: Upload packages directory
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_packages
        path: openwrt/bin/packages
        
    - name: Upload targets directory
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_targets
        path: openwrt/bin/targets
